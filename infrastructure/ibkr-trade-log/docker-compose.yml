version: '3.8'
volumes:
  postgres-data:
  pgadmin-data:
networks:
  ibkr:
  reverse-proxy:
    external:
      name: reverse-proxy

services:
  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - ibkr
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - reverse-proxy
      - ibkr
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    labels:
      traefik.enable: "true"
      # http
      traefik.http.routers.pgadmin-http.rule: Host(`${PGADMIN_HOST}`)
      traefik.http.routers.pgadmin-http.entrypoints: http
      traefik.http.routers.pgadmin-http.middlewares: https-redirect
      # https
      traefik.http.routers.pgadmin-https.rule: Host(`${PGADMIN_HOST}`)
      traefik.http.routers.pgadmin-https.entrypoints: https
      traefik.http.routers.pgadmin-https.tls: "true"
      traefik.http.routers.pgadmin-https.tls.certresolver: tlsresolver
      # https middleware
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.https-redirect.redirectscheme.permanent: "true"
      # traefik dashboard
      traefik.http.services.pgadmin.loadbalancer.server.port: 80

  ibkr-trade-log:
    image: 466255695036.dkr.ecr.eu-central-1.amazonaws.com/ibkr-trade-log
    restart: unless-stopped
    networks:
      - reverse-proxy
      - ibkr
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./reports:/etc/reports
    labels:
      traefik.enable: "true"
      # http
      traefik.http.routers.trade-log-http.rule: Host(`${TRADE_LOG_HOST}`)
      traefik.http.routers.trade-log-http.entrypoints: http
      traefik.http.routers.trade-log-http.middlewares: https-redirect
      # https
      traefik.http.routers.trade-log-https.rule: Host(`${TRADE_LOG_HOST}`)
      traefik.http.routers.trade-log-https.entrypoints: https
      traefik.http.routers.trade-log-https.tls: "true"
      traefik.http.routers.trade-log-https.tls.certresolver: tlsresolver
      # https middleware
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.https-redirect.redirectscheme.permanent: "true"
      # traefik dashboard
      traefik.http.services.trade-log.loadbalancer.server.port: 8000
